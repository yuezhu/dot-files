# Use tmux-256color terminfo when available
if-shell 'infocmp tmux-256color' {
  set-option -g default-terminal 'tmux-256color'
} {
  set-option -g default-terminal 'screen-256color'
}

# Maximum number of lines held in window history
set-option -g history-limit 50000

# Remap prefix to C-z
set-option -g prefix C-z
unbind-key C-b
bind-key C-z send-prefix

# C-z C-z to suspend currently attached client
# bind-key C-z suspend-client

# Keybinding styles
set-option -g status-keys "emacs"
set-window-option -g mode-keys "emacs"

# No waiting time for escape key
set-option -g escape-time 0

# Report terminal titles
set-option -g set-titles on

# Renumber windows in numerical order when a window is closed
set-option -g renumber-windows on

# Highlight windows with activity in the status line
set-window-option -g monitor-activity on

# Resize currently active window regardless of the size of other windows attached by other clients
set-window-option -g aggressive-resize on

# Create new panes in the same working directory
# https://github.com/tmux/tmux/wiki/recipes
bind-key '"' split-window -c "#{pane_current_path}"
bind-key % split-window -hc "#{pane_current_path}"
bind-key c new-window -c "#{pane_current_path}"

# Enable mouse mode
set-window-option -g mouse on

# Drag to re-order windows
bind-key -T root MouseDrag1Status swap-window -t=

# Copy/paste using system clipboard
# https://github.com/tmux/tmux/wiki/Clipboard
# https://wiki.archlinux.org/title/tmux#X_clipboard_integration
set-option -s set-clipboard off

if-shell 'type xsel' {
  set-environment -g -h _CMD_COPY  'xsel -i -p && xsel -o -p | xsel -i -b'
  set-environment -g -h _CMD_PASTE 'xsel -o | tmux load-buffer - ; tmux paste-buffer'
}

if-shell 'type pbcopy' {
  set-environment -g -h _CMD_COPY  'pbcopy'
  set-environment -g -h _CMD_PASTE 'pbpaste | tmux load-buffer - ; tmux paste-buffer'
}

if-shell -F "#{&&:#{_CMD_COPY},#{_CMD_PASTE}}" {

  # root-mode
  bind-key -T root MouseDown3Pane \
    select-pane -t = \; \
    if-shell -F "#{&&:#{pane_in_mode},#{==:#{pane_mode},copy-mode}}" { send-keys -X cancel } \; \
    run-shell "#{_CMD_PASTE}"

  bind-key -T root DoubleClick1Pane \
    select-pane -t = \; \
    if-shell -F "#{||:#{pane_in_mode},#{mouse_any_flag}}" {
      send-keys -M
    } {
      copy-mode ; send-keys -X select-word ; send-keys -FX copy-pipe-no-clear "#{_CMD_COPY}"
    }

  bind-key -T root TripleClick1Pane \
    select-pane -t = \; \
    if-shell -F "#{||:#{pane_in_mode},#{mouse_any_flag}}" {
      send-keys -M
    } {
      copy-mode ; send-keys -X select-line ; send-keys -FX copy-pipe-no-clear "#{_CMD_COPY}"
    }

  # copy-mode
  bind-key -T copy-mode Enter             send-keys -FX copy-pipe-and-cancel "#{_CMD_COPY}"
  bind-key -T copy-mode C-j               send-keys -FX copy-pipe-and-cancel "#{_CMD_COPY}"
  bind-key -T copy-mode M-w               send-keys -FX copy-pipe-and-cancel "#{_CMD_COPY}"
  bind-key -T copy-mode MouseDragEnd1Pane send-keys -FX copy-pipe-no-clear   "#{_CMD_COPY}"
  bind-key -T copy-mode MouseDown1Pane    send-keys -X clear-selection
  bind-key ] \
    if-shell -F "#{&&:#{pane_in_mode},#{==:#{pane_mode},copy-mode}}" { send-keys -X cancel } \; \
    run-shell "#{_CMD_PASTE}"

  bind-key -T copy-mode MouseDown3Pane \
    select-pane \; \
    send-keys -X cancel \; \
    run-shell "#{_CMD_PASTE}"

  bind-key -T copy-mode DoubleClick1Pane \
    select-pane \; \
    send-keys -X select-word \; \
    send-keys -FX copy-pipe-no-clear "#{_CMD_COPY}"

  bind-key -T copy-mode TripleClick1Pane \
    select-pane \; \
    send-keys -X select-line \; \
    send-keys -FX copy-pipe-no-clear "#{_CMD_COPY}"

}
